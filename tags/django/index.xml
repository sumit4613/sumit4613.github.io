<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Django on Sumit Singh</title>
    <link>https://sumit4613.github.io/tags/django/</link>
    <description>Recent content in Django on Sumit Singh</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 02 Nov 2022 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://sumit4613.github.io/tags/django/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Django Middlewares</title>
      <link>https://sumit4613.github.io/posts/django_middlewares/</link>
      <pubDate>Wed, 02 Nov 2022 00:00:00 +0000</pubDate>
      <guid>https://sumit4613.github.io/posts/django_middlewares/</guid>
      <description>&lt;p&gt;We&amp;rsquo;ll come to know about middlewares in django but first, let&amp;rsquo;s understand what is a middleware.&lt;/p&gt;&#xA;&lt;h2 id=&#34;what-is-a-middleware&#34;&gt;What is a middleware?&lt;/h2&gt;&#xA;&lt;p&gt;Middleware is a software that acts as a bridge between an operating system and applications running on it. It provides&#xA;common services and capabilities to applications outside what&amp;rsquo;s available from the operating system.&lt;/p&gt;&#xA;&lt;h2 id=&#34;what-is-a-django-middleware&#34;&gt;What is a django middleware?&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;A middleware is a component that sits between the Django view and the Django template.&lt;/li&gt;&#xA;&lt;li&gt;It is a framework that allows you to hook into Django&amp;rsquo;s request/response processing at various points.&lt;/li&gt;&#xA;&lt;li&gt;It&amp;rsquo;s a lightweight, low-level, plug-in system for globally altering Django&amp;rsquo;s input or output.&lt;/li&gt;&#xA;&lt;li&gt;It can be used to modify the incoming request before it reaches the view, or the outgoing response before it reaches&#xA;the browser.&lt;/li&gt;&#xA;&lt;li&gt;It can also be used to execute some code that doesn&amp;rsquo;t fit neatly into any of your existing views or models.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;how-middleware-works-in-django&#34;&gt;How middleware works in django?&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;When a request comes to the server, it is first processed by the middleware.&lt;/li&gt;&#xA;&lt;li&gt;The middleware then passes the request to the view.&lt;/li&gt;&#xA;&lt;li&gt;The view processes the request and returns a response.&lt;/li&gt;&#xA;&lt;li&gt;The middleware then processes the response and returns it to the browser.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;ordering-and-layering-of-middlewares&#34;&gt;Ordering and layering of middlewares&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Django middlewares are executed in the order they are defined in the &lt;code&gt;MIDDLEWARE&lt;/code&gt; setting.&lt;/li&gt;&#xA;&lt;li&gt;The order of middlewares is important because each middleware can modify the request and response.&lt;/li&gt;&#xA;&lt;li&gt;The order of middlewares is also important because some middlewares depend on the output of other middlewares. For&#xA;example, the &lt;code&gt;SessionMiddleware&lt;/code&gt; depends on the &lt;code&gt;AuthenticationMiddleware&lt;/code&gt; to populate the &lt;code&gt;request.user&lt;/code&gt; attribute.&lt;/li&gt;&#xA;&lt;li&gt;Middlewares are run in &lt;strong&gt;reverse order&lt;/strong&gt; when the response is returned to the browser.&lt;/li&gt;&#xA;&lt;li&gt;The &lt;code&gt;SecurityMiddleware&lt;/code&gt; is the first middleware in the list of middlewares. It is the first middleware to process the&#xA;request and the last middleware to process the response.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;how-to-write-a-custom-middleware-in-pre-django-110-style&#34;&gt;How to write a custom middleware in pre-Django 1.10-style?&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;In pre-Django 1.10-style, we have to write a middleware class that implements the &lt;code&gt;process_request()&lt;/code&gt; and&#xA;&lt;code&gt;process_response()&lt;/code&gt; methods.&lt;/li&gt;&#xA;&lt;li&gt;You need to inherit the &lt;code&gt;MiddlewareMixin&lt;/code&gt; class to make sure that your middleware is compatible with both pre-Django&#xA;1.10-style and post-Django 1.10-style.&lt;/li&gt;&#xA;&lt;li&gt;The &lt;code&gt;process_request()&lt;/code&gt; method is called before the view is called.&lt;/li&gt;&#xA;&lt;li&gt;The &lt;code&gt;process_response()&lt;/code&gt; method is called after the view is called.&lt;/li&gt;&#xA;&lt;li&gt;The &lt;code&gt;process_exception()&lt;/code&gt; method is called if an exception occurs in the view. This method is optional.&lt;/li&gt;&#xA;&lt;li&gt;The &lt;code&gt;process_template_response()&lt;/code&gt; method is called after the view is called and the response is rendered. This method&#xA;is&#xA;optional.&lt;/li&gt;&#xA;&lt;li&gt;The &lt;code&gt;process_view()&lt;/code&gt; method is called just before Django calls the view.. This method is optional.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Example:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Moving Django Projects to a new server</title>
      <link>https://sumit4613.github.io/posts/move-django-projects-to-new-server/</link>
      <pubDate>Sun, 02 Oct 2022 00:00:00 +0000</pubDate>
      <guid>https://sumit4613.github.io/posts/move-django-projects-to-new-server/</guid>
      <description>&lt;p&gt;I keep migrating django projects from one provider to another. Everytime, I have to look up the same steps. So I decided&#xA;to write them down here.&#xA;It is a bit of a long post that contains various commands and sample config files, but I hope it will be useful to&#xA;someone.&lt;/p&gt;&#xA;&lt;p&gt;I&amp;rsquo;m assuming by now, you already created a new instance and is able to ssh into it.&lt;/p&gt;&#xA;&lt;h2 id=&#34;installupdate-server-dependencies&#34;&gt;Install/Update Server Dependencies&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt-get update&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt-get -y upgrade&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;postgresql&#34;&gt;PostgreSQL&lt;/h3&gt;&#xA;&lt;p&gt;&lt;em&gt;Note: I install postgres inside the server, you can use RDS or some external service as well.&lt;/em&gt;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
